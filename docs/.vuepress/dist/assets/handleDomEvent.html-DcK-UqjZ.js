import{_ as s,c as a,b as t,o as p}from"./app-Bo7tVs9K.js";const e="/orange-docs/assets/img_1-DSWc83qk.png",l={};function c(i,n){return p(),a("div",null,n[0]||(n[0]=[t('<h1 id="_5-手写dom事件监听-带委托" tabindex="-1"><a class="header-anchor" href="#_5-手写dom事件监听-带委托"><span>5.手写DOM事件监听(带委托)</span></a></h1><h2 id="_5-1-理解事件冒泡与事件委托" tabindex="-1"><a class="header-anchor" href="#_5-1-理解事件冒泡与事件委托"><span>5.1. 理解事件冒泡与事件委托</span></a></h2><ul><li>事件冒泡的流程 <ul><li>基于DOM树形结构</li><li>事件在目标元素上处理后, 会由内向外(上)逐层传递</li><li>应用场景: 事件代理/委托/委派</li></ul></li></ul><p><img src="'+e+`" alt="img_1.png"></p><ul><li>事件委托/代理 <ul><li>将多个子元素的同类事件监听委托给(绑定在)共同的一个父组件上</li><li>好处： <ul><li>减少内存占用(事件监听回调从n变为</li><li>动态添加的内部元素也能响应</li></ul></li></ul></li></ul><h2 id="_5-2-api-相关" tabindex="-1"><a class="header-anchor" href="#_5-2-api-相关"><span>5.2. API 相关</span></a></h2><ul><li>语法：addEventListener(element, type, fn, selector)</li><li>说明：如果selector没有，直接给element绑定事件，如果selector有，将selector对应的多个元素的事件委托绑定给父元素element</li></ul><h2 id="_5-3-编码实现" tabindex="-1"><a class="header-anchor" href="#_5-3-编码实现"><span>5.3.编码实现</span></a></h2><ul><li><code>src/event-bind/index.js</code></li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">/* </span>
<span class="line">语法：addEventListener(element, type, fn, selector)</span>
<span class="line">说明：如果selector没有，直接给element绑定事件，</span>
<span class="line">  如果selector有，将selector对应的多个元素的事件委托绑定给父元素element</span>
<span class="line">*/</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token parameter">element<span class="token punctuation">,</span> type<span class="token punctuation">,</span> fn<span class="token punctuation">,</span> selector</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 如果没有指定selector, 普通的事件绑定</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>selector<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        element<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span>type<span class="token punctuation">,</span> fn<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span><span class="token comment">// 否则是代委托的事件绑定</span></span>
<span class="line">        element<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span>type<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">// 得到真正发生事件的目标元素</span></span>
<span class="line">            <span class="token keyword">const</span> target <span class="token operator">=</span> event<span class="token punctuation">.</span>target</span>
<span class="line">            <span class="token comment">// 如果与选择器匹配</span></span>
<span class="line">            <span class="token keyword">if</span> <span class="token punctuation">(</span>target<span class="token punctuation">.</span><span class="token function">matches</span><span class="token punctuation">(</span>selector<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token comment">// 调用处理事件的回调fn, 并指定this为目标元素, 参数为event</span></span>
<span class="line">                <span class="token function">fn</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> event<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-4-测试" tabindex="-1"><a class="header-anchor" href="#_5-4-测试"><span>5.4.测试</span></a></h2><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>自定义事件监听<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>AAA1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>AAA2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>AAA3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>AAA4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token comment">&lt;!-- 功能: 点击每行提示对应的文本 --&gt;</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>../dist/common-utils.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"></span>
<span class="line">    <span class="token comment">// 不使用事件委托</span></span>
<span class="line">    <span class="token comment">// document.querySelectorAll(&#39;ul&gt;li&#39;).forEach(li =&gt; {</span></span>
<span class="line">    <span class="token comment">//   // li.addEventListener(&#39;click&#39;, function (event) {</span></span>
<span class="line">    <span class="token comment">//   //   alert(this.innerHTML)</span></span>
<span class="line">    <span class="token comment">//   // })</span></span>
<span class="line">    <span class="token comment">//   aUtils.addEventListener(li, &#39;click&#39;, function (event) {</span></span>
<span class="line">    <span class="token comment">//     // alert(event.target.innerHTML)</span></span>
<span class="line">    <span class="token comment">//     alert(this.innerHTML)</span></span>
<span class="line">    <span class="token comment">//   })</span></span>
<span class="line">    <span class="token comment">// })</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 使用事件委托</span></span>
<span class="line">    <span class="token keyword">const</span> ul <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;ul&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    CommonUtils<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span>ul<span class="token punctuation">,</span> <span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// alert(this.innerHTML)</span></span>
<span class="line">        <span class="token function">alert</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>innerHTML<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">&#39;li&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12)]))}const u=s(l,[["render",c],["__file","handleDomEvent.html.vue"]]),k=JSON.parse('{"path":"/tools/customize/handleDomEvent.html","title":"5.手写DOM事件监听(带委托)","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"5.1. 理解事件冒泡与事件委托","slug":"_5-1-理解事件冒泡与事件委托","link":"#_5-1-理解事件冒泡与事件委托","children":[]},{"level":2,"title":"5.2. API 相关","slug":"_5-2-api-相关","link":"#_5-2-api-相关","children":[]},{"level":2,"title":"5.3.编码实现","slug":"_5-3-编码实现","link":"#_5-3-编码实现","children":[]},{"level":2,"title":"5.4.测试","slug":"_5-4-测试","link":"#_5-4-测试","children":[]}],"git":{"updatedTime":1753945934000,"contributors":[{"name":"zhangcheng","email":"2778162192@qq.com","commits":1}]},"filePathRelative":"tools/customize/handleDomEvent.md"}');export{u as comp,k as data};
